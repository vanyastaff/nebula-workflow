searchState.loadedDescShard("nebula_idempotency", 0, "Executor for idempotent actions.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait for idempotent actions.\nExecutes the action.\nReturns the idempotency configuration for this action.\nBehavior on idempotency conflict.\nConfiguration for idempotency behavior.\nStrategy for generating idempotency keys.\nStorage backend selection.\nResult caching configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nErrors related to idempotency operations.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRepresents a unique idempotency key for deduplication â€¦\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIdempotency levels supported by the system.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTransaction manager with idempotency support (MVP).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIn-memory request idempotency manager (MVP).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIn-memory idempotency storage (no TTL for MVP).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrait for idempotency storage backends.\nIn-memory storage for workflow checkpoints.\nClear all checkpoints for a workflow.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet the latest checkpoint for a workflow.\nSave a checkpoint for a workflow.\nUnique identifier for a checkpoint.\nManages workflow checkpoints.\nUnique identifier for a node.\nData for a workflow checkpoint.\nUnique identifier for a workflow.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nState of a workflow execution.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAdaptive ML-based\nCheckpoint after every node\nStrategy for workflow checkpointing.\nOnly at critical points\nTime-based checkpoints\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")